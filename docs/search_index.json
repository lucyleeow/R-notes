[
["plotting-in-r.html", "Chapter 9 Plotting in R 9.1 Base R plotting 9.2 Plot 9.3 par 9.4 Palette", " Chapter 9 Plotting in R Useful references: Roger Peng’s guide () The core plotting and graphics engine in R is encapsulated in the following packages: graphics: contains plotting functions for the ‘base’ graphing systems, including plot, hist, boxplot and many others. grDevices: contains all the code implementing the various graphics devices, including X11, PDF, PostScript, PNG, etc. There are three main graphics systems for making a plot: base - usually constructed piecemeal, with each aspect of the plot handled separately through a series of function calls. Conceptually simpler. lattice - usually constructed in a single function call, so all of the graphics parameters have to be specified at once. This allows R to automatically calculate the necessary spacings and font sizes. ggplot2 - combines concepts from both base and lattice but uses an independent implementation. These generally cannot be mixed. ggplot2 will be discussed in the next chapter. 9.1 Base R plotting There are two ‘phases’ to making a plot: Initialising a new plot (e.g. with plot() or hist(), which will launch a graphics device and draw a plot on the device.) Annotating (adding to) an existing plot Example of basic plot: plot(1:5,1:5) The default method for plot() is creates a scatter plot and will be used unless the R object input is of some special class. 9.2 Plot Base plotting functions (e.g. plot() and boxplot()) share a set of parameters. Here are some ones. pch: the plotting symbol (default is open circle). The differnet symbols and their corresponding number are shown here: You can also set pch to a letter, and that letter will be shown at each point. * lty: the line type (default is solid line), can be dashed, dotted, etc. * lwd: the line width, specified as an integer multiple. * col: the plotting color, specified as a number, string, or hex code; the colors() function gives you a vector of colors by name. * xlab: character string for the x-axis label. * ylab: character string for the y-axis label. * main: title of the plot. * type: what type of plot should be drawn e.g. 'p' for points, 'b' for both. Scatter plot with appearance changes. plot(1:5,1:5, type = &#39;b&#39;, pch = 0, lty = 2, main = &quot;title&quot;, col = &quot;darkgreen&quot;) 9.3 par The par() function specifies global parameters that affect all plots in an R session. Of course these parameters las: the orientation of the axis labels on the plot. bg: the background color. mar: the margin size. oma: the outer margin size (default is 0 for all sides). mfrow: layout of plots using syntax mfrow=c(nrows, ncols), plots are filled row-wise. mfcol: layout of plots using syntax mfcol=c(nrows, ncols), plots are filled column-wise. 9.3.1 Combining plots This can be done using the arguments mfrow or mfcol in par(). par(mfrow = c(2,1)) plot(1:5,1:5) plot(1:5,1:5) The layout() function gives you more flexibility. This function takes a matrix, which specifies the location of the figures to plot layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE)) hist(mtcars$wt) hist(mtcars$mpg) hist(mtcars$disp) The matrix above looks like this: matrix(c(1,1,2,3), 2, 2, byrow = TRUE) ## [,1] [,2] ## [1,] 1 1 ## [2,] 2 3 It essentially splits the plotting ‘window’ into 4 quadrants, and specified that the first plot should take the first row consisiting of 2 quandrants and plots 2 and 3 take the second row of quandrants. You can also add widths and heights arguments to layout() to specify the size of each quandrant (the number of sections would of course depend on each matrix, but there are four in our case). layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE), widths=c(2,1), heights=c(2,1)) hist(mtcars$wt) hist(mtcars$mpg) hist(mtcars$disp) You can also manipulate plot arrangement using fig in par(): par(fig=c(0,0.8,0,0.8)) plot(mtcars$wt, mtcars$mpg, xlab=&quot;Car Weight&quot;, ylab=&quot;Miles Per Gallon&quot;) par(fig=c(0,0.8,0.45,1), new=TRUE) boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE) par(fig=c(0.65,1,0,0.8),new=TRUE) boxplot(mtcars$mpg, axes=FALSE) mtext(&quot;Enhanced Scatterplot&quot;, side=3, outer=TRUE, line=-3) Reference: Quick-R 9.4 Palette Colour blind friendly palette - 15 hues: pal &lt;- c(&quot;#000000&quot;,&quot;#004949&quot;,&quot;#009292&quot;,&quot;#ff6db6&quot;,&quot;#ffb6db&quot;, &quot;#490092&quot;,&quot;#006ddb&quot;,&quot;#b66dff&quot;,&quot;#6db6ff&quot;,&quot;#b6dbff&quot;, &quot;#920000&quot;,&quot;#924900&quot;,&quot;#db6d00&quot;,&quot;#24ff24&quot;,&quot;#ffff6d&quot;) Use: 1,6,11, 2,7,12 20 distinct colours (Link): pal2 &lt;- c(&quot;#000000&quot;, &quot;#800000&quot;, &quot;#4363d8&quot;, &quot;#f58231&quot;, &quot;#808000&quot;, &quot;#469990&quot;,&quot;#000075&quot;, &quot;#9A6324&quot;, &quot;#911eb4&quot;, &quot;#3cb44b&quot;, &quot;#e6194B&quot;, &quot;#f032e6&quot;, &quot;#42d4f4&quot;, &quot;#bfef45&quot;, &quot;#ffe119&quot;, &quot;#a9a9a9&quot;, &quot;#e6beff&quot;, &quot;#fabebe&quot;, &quot;#aaffc3&quot;, &quot;#ffd8b1&quot;) "]
]
